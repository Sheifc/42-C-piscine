# Write Function:
-----------------
In C programming, the `write` function is used to write data to a file descriptor. It's often used for low-level file I/O operations. 
The `write` function has three parameters:

1. File Descriptor (`int fd`): This parameter specifies the file descriptor of the file to which the data will be written. 
File descriptors are small non-negative integers that represent open files in the operating system. 
Common values include `0` for standard input (stdin), `1` for standard output (stdout), and `2` for standard error (stderr). 
You can also obtain file descriptors from functions like `open` or `socket`.

2. Data Buffer (`const void *buf`): This parameter is a pointer to the data you want to write. 
It should point to the memory location where the data you want to write is stored. 
The data can be of any data type (char, int, struct, etc.). 
However, the function treats it as a sequence of bytes, so the actual data type doesn't matter as long as you provide the correct buffer size.

3. Number of Bytes to Write (`size_t count`): This parameter specifies the number of bytes from the data buffer that you want to write. 
It indicates the size of the data you want to write to the file. 
It's important to ensure that the buffer you provide is large enough to accommodate the specified number of bytes, otherwise, you might encounter memory-related issues.

The `write` function returns the number of bytes actually written to the file. 
If the return value is negative, it usually indicates an error, and you can check the value of the global `errno` variable to determine the specific error.

# Very important: 
-----------------
At the C piscine printf is not allowed therefore write should be used in all cases, make sure you print arrays in a while loop with write. 
